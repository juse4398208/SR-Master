#!/bin/sh
# .git/hooks/pre-push

# 設定日誌文件路徑
log_file=".git/hooks/pre-push.log"
incremented_marker=".version-incremented"

# 定義版本遞增函數
increment_version() {
    # 獲取遠端和本地的 commit ID
    remote_commit=$(git rev-parse origin/main)
    local_commit=$(git rev-parse HEAD)
    
    echo "Remote commit: $remote_commit" >> $log_file
    echo "Local commit: $local_commit" >> $log_file
    
    # 確認遠端和本地 commit 不同才進行版本自增
    if [ "$remote_commit" != "$local_commit" ]; then
        # 版本號遞增邏輯
        version_file="version.txt"
        if [ ! -f $version_file ]; then
            echo "version.txt not found! Creating a new one with initial value 1." >> $log_file
            echo "1" > $version_file
        else
            current_version=$(cat $version_file)
            new_version=$((current_version + 1))
            echo $new_version > $version_file
            echo "Updated version to $new_version" >> $log_file
        fi

        git add $version_file

        # 获取当前提交的消息
        old_commit_message=$(git log -1 --pretty=%B)
        new_commit_message="$old_commit_message Bump version to $new_version"

        # 修改提交，保留原消息并添加版本递增信息
        git commit --amend -m "$new_commit_message"
        echo "Amended commit message to: $new_commit_message" >> $log_file

        # 创建标记文件以指示版本已递增
        touch $incremented_marker
    else
        echo "Local and remote commits are the same, skipping version increment." >> $log_file
    fi
}

# 獲取即將推送的遠端分支名稱
remote_branch=$(git rev-parse --abbrev-ref HEAD)

# 記錄分支信息到日誌
echo "Pushing to branch: $remote_branch" >> $log_file

# 檢查當前提交是否為合併提交
is_merge_commit=$(git log -1 --pretty=%P | wc -w)
merge_parents=$(git log -1 --pretty=%P)

echo "Merge commit check result: $is_merge_commit" >> $log_file
echo "Parents of current commit: $merge_parents" >> $log_file

# 僅當推送到 main 分支時才處理版本號遞增
if [ "$remote_branch" == "main" ]; then
    echo "On main branch, proceeding with version check..." >> $log_file

    if [ "$is_merge_commit" -eq 2 ]; then
        echo "Detected a merge commit. Checking if it should increment version..." >> $log_file

        # 檢查合併提交的兩個父節點，是否一個在 main，另一個不在 main
        parent1=$(echo $merge_parents | awk '{print $1}')
        parent2=$(echo $merge_parents | awk '{print $2}')

        # 確認這不是因為`rebase`或其他原因產生的合併提交
        if git merge-base --is-ancestor $parent1 origin/main && git merge-base --is-ancestor $parent2 origin/main; then
            echo "Merge commit detected from branch, skipping version increment." >> $log_file
        else
            echo "New merge commit detected, incrementing version number..." >> $log_file
            increment_version
        fi
    else
        commit_message=$(git log -1 --pretty=%B)
        if echo "$commit_message" | grep -q 'Bump version to'; then
            echo "Commit message contains 'Bump version to', skipping version increment." >> $log_file
        else
            echo "No merge commit detected, incrementing version number..." >> $log_file
            increment_version
        fi
    fi

    # 如果版本号已经递增，则推送到远程
    if [ -f $incremented_marker ]; then
        git push --force-with-lease origin main
        # 删除标记文件
        rm $incremented_marker
    fi
else
    echo "Pushing to $remote_branch branch, no version increment." >> $log_file
fi
